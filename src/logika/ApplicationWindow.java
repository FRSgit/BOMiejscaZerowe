package logika;

import javax.swing.JOptionPane;

/**
 * @author FRS
 */
public class ApplicationWindow extends javax.swing.JFrame {
    
    /**
     * Application states
     */
    public static final int         STATE_MENU = 0;
    public static final int         STATE_SIMULATION = 1;
    
    private javax.swing.JPanel simulationPane;
    
    /**
     * Creates new form ApplicationWindow
     */
    public ApplicationWindow() {
        initComponents();
    }
    
    public ApplicationWindow(int stateId) {
        initComponents();
        moveToState(stateId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveLoadToolBar = new javax.swing.JToolBar();
        saveToolBarButton = new javax.swing.JButton();
        loadToolBarButton = new javax.swing.JButton();
        simulationToolbar = new javax.swing.JToolBar();
        programUtilitiesToolBar = new javax.swing.JToolBar();
        aboutToolBarButton = new javax.swing.JButton();
        documentationToolBarButton = new javax.swing.JButton();
        exitToolBarButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        mainMenuPane = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        subtitle = new javax.swing.JLabel();
        newSimulationButton = new javax.swing.JButton();
        loadSimulationButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newSimulationMenuButton = new javax.swing.JMenuItem();
        openSimulationMenuButton = new javax.swing.JMenuItem();
        saveSimulationMenuButton = new javax.swing.JMenuItem();
        exitMenuButton = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        documentationMenuButton = new javax.swing.JMenuItem();
        authorsMenuButton = new javax.swing.JMenuItem();
        aboutMenuButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(600, 350));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(600, 350));

        saveLoadToolBar.setFloatable(false);
        saveLoadToolBar.setRollover(true);

        saveToolBarButton.setText("Save");
        saveToolBarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveToolBarButton.setEnabled(false);
        saveToolBarButton.setFocusable(false);
        saveToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveToolBarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToolBarButtonActionPerformed(evt);
            }
        });
        saveLoadToolBar.add(saveToolBarButton);

        loadToolBarButton.setText("Load");
        loadToolBarButton.setFocusable(false);
        loadToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveLoadToolBar.add(loadToolBarButton);

        simulationToolbar.setFloatable(false);
        simulationToolbar.setRollover(true);

        programUtilitiesToolBar.setFloatable(false);
        programUtilitiesToolBar.setRollover(true);

        aboutToolBarButton.setText("About");
        aboutToolBarButton.setFocusable(false);
        aboutToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aboutToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aboutToolBarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutToolBarButtonActionPerformed(evt);
            }
        });
        programUtilitiesToolBar.add(aboutToolBarButton);

        documentationToolBarButton.setText("Help");
        documentationToolBarButton.setFocusable(false);
        documentationToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        documentationToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        programUtilitiesToolBar.add(documentationToolBarButton);

        exitToolBarButton.setText("Exit");
        exitToolBarButton.setFocusable(false);
        exitToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitToolBarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitToolBarButtonActionPerformed(evt);
            }
        });
        programUtilitiesToolBar.add(exitToolBarButton);

        mainPanel.setLayout(new java.awt.CardLayout());

        mainMenuPane.setPreferredSize(new java.awt.Dimension(580, 300));

        title.setFont(new java.awt.Font("Open Sans Semibold", 0, 40)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Genetic algorithm");

        subtitle.setFont(new java.awt.Font("Open Sans Light", 0, 13)); // NOI18N
        subtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtitle.setText("for finding roots of complex functions of several variables");
        subtitle.setToolTipText("");
        subtitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        newSimulationButton.setText("New simulation");
        newSimulationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSimulationButtonActionPerformed(evt);
            }
        });

        loadSimulationButton.setText("Load simulation");

        aboutButton.setText("About");

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuPaneLayout = new javax.swing.GroupLayout(mainMenuPane);
        mainMenuPane.setLayout(mainMenuPaneLayout);
        mainMenuPaneLayout.setHorizontalGroup(
            mainMenuPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainMenuPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loadSimulationButton, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(newSimulationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aboutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuPaneLayout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addGroup(mainMenuPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(117, 117, 117))
        );
        mainMenuPaneLayout.setVerticalGroup(
            mainMenuPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPaneLayout.createSequentialGroup()
                .addGroup(mainMenuPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuPaneLayout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuPaneLayout.createSequentialGroup()
                        .addComponent(subtitle)
                        .addGap(18, 18, 18)))
                .addComponent(newSimulationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadSimulationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainPanel.add(mainMenuPane, "card2");

        fileMenu.setText("File");

        newSimulationMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newSimulationMenuButton.setText("New simulation...");
        newSimulationMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSimulationMenuButtonActionPerformed(evt);
            }
        });
        newSimulationMenuButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newSimulationMenuButtonKeyPressed(evt);
            }
        });
        fileMenu.add(newSimulationMenuButton);

        openSimulationMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openSimulationMenuButton.setText("Open simulation...");
        openSimulationMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSimulationMenuButtonActionPerformed(evt);
            }
        });
        fileMenu.add(openSimulationMenuButton);

        saveSimulationMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveSimulationMenuButton.setText("Save simulation...");
        saveSimulationMenuButton.setEnabled(false);
        saveSimulationMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSimulationMenuButtonActionPerformed(evt);
            }
        });
        fileMenu.add(saveSimulationMenuButton);

        exitMenuButton.setText("Exit");
        exitMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuButtonActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuButton);

        mainMenuBar.add(fileMenu);

        helpMenu.setText("Help");

        documentationMenuButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        documentationMenuButton.setText("Documentation");
        helpMenu.add(documentationMenuButton);

        authorsMenuButton.setText("Authors");
        authorsMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorsMenuButtonActionPerformed(evt);
            }
        });
        helpMenu.add(authorsMenuButton);

        aboutMenuButton.setText("About");
        helpMenu.add(aboutMenuButton);

        mainMenuBar.add(helpMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveLoadToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(simulationToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(programUtilitiesToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveLoadToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(simulationToolbar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(programUtilitiesToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveSimulationMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSimulationMenuButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveSimulationMenuButtonActionPerformed

    private void newSimulationMenuButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newSimulationMenuButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_newSimulationMenuButtonKeyPressed

    private void openSimulationMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSimulationMenuButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openSimulationMenuButtonActionPerformed

    private void authorsMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorsMenuButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorsMenuButtonActionPerformed

    private void aboutToolBarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutToolBarButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutToolBarButtonActionPerformed
    
   /*
    * Moves to the new simulation view
    */
    private void newSimulationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSimulationButtonActionPerformed
        newSimulation();
    }//GEN-LAST:event_newSimulationButtonActionPerformed

    private void newSimulationMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSimulationMenuButtonActionPerformed
        newSimulation();
    }//GEN-LAST:event_newSimulationMenuButtonActionPerformed

    private void saveToolBarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToolBarButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveToolBarButtonActionPerformed

    private void exitMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuButtonActionPerformed
        closeApplication();
    }//GEN-LAST:event_exitMenuButtonActionPerformed

    private void exitToolBarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitToolBarButtonActionPerformed
        closeApplication();
    }//GEN-LAST:event_exitToolBarButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        closeApplication();
    }//GEN-LAST:event_exitButtonActionPerformed
    
    /**
     * closes application
     */
    private void closeApplication(){
        int confirm = JOptionPane.showOptionDialog(this,
                "Are You Sure to Close this Application?",
                "Exit Confirmation", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, null, null);
        if(confirm == JOptionPane.YES_OPTION)
            System.exit(0);
    }
    
    /**
     * 
     * STATES LOADING
     * 
     */
    
        /**
        * Loads desired application's state to `mainPanel` jPanel
        */
        private void moveToState(int stateId){
            switch(stateId){
                case STATE_SIMULATION:
                    moveToSimulation();
                    break;
                case STATE_MENU:
                default:
                    moveToMenu();
                    break;    
            }
        }
        
        /**
         * Moves to main menu
         */
        private void moveToMenu(){
            mainPanel.removeAll();
            mainPanel.repaint();
            mainPanel.revalidate();

            mainPanel.add(mainMenuPane);
            mainPanel.repaint();
            mainPanel.revalidate();
        }
        
        /**
         * moves to simulation screen
         */
        private void moveToSimulation(){
            mainPanel.removeAll();
            mainPanel.repaint();
            mainPanel.revalidate();

            mainPanel.add(simulationPane);
            mainPanel.repaint();
            mainPanel.revalidate();
        }

    
    /**
     * creates new simulation
     */
    private void newSimulation(){
        simulationPane = new Simulation();
        moveToSimulation();
    }
    
    /**
     * saves simulation's parameters to previous file
     */
    private void saveSimulation(){
        // TODO: SAVE PARAMS
    }
    
    /**
     * saves simulation's parameters to new files
     */
    private void saveAsSimulation(){
        // TODO: SAVE PARAMS
    }
    
    /**
     * loads simulation's parameters from  file
     */
    private void loadSimulation(){
        // TODO: LOAD PARAMS
        moveToSimulation();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void showWindow() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicationWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JMenuItem aboutMenuButton;
    private javax.swing.JButton aboutToolBarButton;
    private javax.swing.JMenuItem authorsMenuButton;
    private javax.swing.JMenuItem documentationMenuButton;
    private javax.swing.JButton documentationToolBarButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JMenuItem exitMenuButton;
    private javax.swing.JButton exitToolBarButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton loadSimulationButton;
    private javax.swing.JButton loadToolBarButton;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JPanel mainMenuPane;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton newSimulationButton;
    private javax.swing.JMenuItem newSimulationMenuButton;
    private javax.swing.JMenuItem openSimulationMenuButton;
    private javax.swing.JToolBar programUtilitiesToolBar;
    private javax.swing.JToolBar saveLoadToolBar;
    private javax.swing.JMenuItem saveSimulationMenuButton;
    private javax.swing.JButton saveToolBarButton;
    private javax.swing.JToolBar simulationToolbar;
    private javax.swing.JLabel subtitle;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
